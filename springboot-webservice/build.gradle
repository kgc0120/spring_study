buildscript {
    ext { // build.gradle 에서 사용하는 전역변수를 설정하겠다.
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// 자바와 스프링 부트를 사용하기 위해서 사용하는 필수 플러그인
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 스프링 부트의 의존성들을 관리해 주는 플러그인

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories { // 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을 지 정한다.
    // 기존에 mavenCentral 많이 사용 하지만 본인이 만든 라이브러리를 업로드하기 위해서 정말 많은 과정과 설정이 필요해서 불편
    // 그래서 나온 방법이 jcenter 또한 jcenter 라이브러리에 업로드하면 mavenCentral 에도 자동 업로드할 수 있다.
    // 그래서 두개 다 등록하고 사용
    mavenCentral()
    jcenter()
}

dependencies { // 개발에 필요한 의존성들을 선언하는 곳
    compile('org.springframework.boot:spring-boot-starter-web') // 특정 버전 명시하지 않아야 한다. 그래야 위에 버전을 따라간다.
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}